name: Release

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '**/metadata.json'

jobs:
  changes:
    name: Get changes
    runs-on: ubuntu-latest
    outputs:
      matrix: "{\"container\": ${{ steps.changed.outputs.containers }} }"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # needed for tj-actions/changed-files
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          list-files: json
          filters: |
            changed:
              - added|modified:
                  - '**/metadata.json'
      - name: Debug filter
        run: echo "${{ toJson(steps.filter.outputs) }}"
      - name: Gather changes
        id: changed
        run: |
          tmp=$(mktemp -d) && echo '${{ toJson(steps.filter.outputs) }}' > "${tmp}/changes.json"
          changed_files=$(jq --raw-output '.changed_files' "${tmp}/changes.json") && rm -rf "${tmp}"
          echo ::set-output name=containers::${changed_files}

  release:
    name: Release container
    runs-on: ubuntu-latest
    needs:
      - changes
    strategy:
      matrix: ${{ fromJson(needs.changes.outputs.matrix) }}
      max-parallel: 4
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Env
        id: setup
        run: |
          echo ::set-output name=build_date::$(date --rfc-3339=seconds --utc)
          echo ::set-output name=app::$(echo "./${{ matrix.container }}" | awk -F / '{print $3}')
          echo ::set-output name=version::$(jq --raw-output '.version' ${{ matrix.container }})
          echo ::set-output name=image_tag::$(jq --raw-output '.image_tag' ${{ matrix.container }})
          echo ::set-output name=stream::$(jq --raw-output '.stream' ${{ matrix.container }})
          echo ::set-output name=platforms::$(jq --raw-output '.platforms | join(",")' ${{ matrix.container }})
      
      # - name: Extract metadata (tags, labels) for Docker
      #   id: meta
      #   uses: docker/metadata-action@v4
      #   with:
      #     images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: ${{ steps.setup.outputs.platforms }}
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true
          version: latest
          driver-opts: image=moby/buildkit:latest
      - name: Build and Push
        uses: docker/build-push-action@v3
        with:
          build-args: |
            VERSION=${{ steps.setup.outputs.version }}
            STREAM=${{ steps.setup.outputs.stream }}
          labels: |
            org.opencontainers.image.created=${{ steps.setup.outputs.build_date }}
          context: .
          platforms: ${{ steps.setup.outputs.platforms }}
          file: ./images/${{ steps.setup.outputs.app }}/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ steps.setup.outputs.app }}:rolling
            ghcr.io/${{ github.repository_owner }}/${{ steps.setup.outputs.app }}:v${{ steps.setup.outputs.version }}
