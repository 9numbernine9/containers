name: Release

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '**/metadata.json'

jobs:
  changes:
    name: Get changes
    runs-on: ubuntu-latest
    outputs:
      matrix: "{\"container\": ${{ steps.changed.outputs.containers }} }"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # needed for tj-actions/changed-files
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          list-files: json
          filters: |
            changed:
              - added|modified:
                  - '**/metadata.json'
      - name: Debug filter
        run: echo "${{ toJson(steps.filter.outputs) }}"
      - name: Gather changes
        id: changed
        run: |
          tmp=$(mktemp -d) && echo '${{ toJson(steps.filter.outputs) }}' > "${tmp}/changes.json"
          changed_files=$(jq --raw-output '.changed_files' "${tmp}/changes.json") && rm -rf "${tmp}"
          echo ::set-output name=containers::${changed_files}

  release:
    name: Release container
    runs-on: ubuntu-latest
    needs:
      - changes
    strategy:
      matrix: ${{ fromJson(needs.changes.outputs.matrix) }}
      max-parallel: 4
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install moreutils
        run: |
          sudo apt install moreutils
      - name: Setup vars from metadata.json
        id: envs
        run: |
          echo ::set-output name=build_date::$(date --rfc-3339=seconds --utc)
          echo ::set-output name=app::$(echo "./${{ matrix.container }}" | awk -F / '{print $3}')
          echo ::set-output name=current_version::$(jq --raw-output '.current_version' ${{ matrix.container }})
          echo ::set-output name=stream::$(echo "./${{ matrix.container }}" | awk -F / '{print $4}')
          echo ::set-output name=stable::$(jq --raw-output '.stable' ${{ matrix.container }})
          echo ::set-output name=platforms::$(jq --raw-output '.platforms | join(",")' ${{ matrix.container }})
      - name: Setup Tags
        id: tags
        run: |
          [[ "${{ steps.envs.outputs.app }}" != "ubuntu" ]] && v="v"
          [[ "${{ steps.envs.outputs.stable }}" == "false" ]] && s="-${{ steps.envs.outputs.stream }}"
          rolling="${{ steps.envs.outputs.app }}${s}:rolling"
          echo ::set-output name=rolling::ghcr.io/${{ github.repository_owner }}/${rolling}
          semver="${{ steps.envs.outputs.app }}${s}:${v}${{ steps.envs.outputs.current_version }}"
          echo ::set-output name=semver::ghcr.io/${{ github.repository_owner }}/${semver}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: ${{ steps.envs.outputs.platforms }}
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true
          version: latest
          driver-opts: image=moby/buildkit:latest
      - name: Release
        id: release
        uses: docker/build-push-action@v3
        with:
          build-args: |
            VERSION=${{ steps.envs.outputs.current_version }}
            STREAM=${{ steps.envs.outputs.stream }}
          labels: |
            org.opencontainers.image.created=${{ steps.envs.outputs.build_date }}
          context: .
          platforms: ${{ steps.envs.outputs.platforms }}
          file: ./images/${{ steps.envs.outputs.app }}/Dockerfile
          push: true
          tags: |
            ${{ steps.tags.outputs.rolling }}
            ${{ steps.tags.outputs.semver }}
      - name: Build successful
        if: always()
        run: |
          jq '.build_failed = false' "${{ matrix.container }}" | sponge "${{ matrix.container }}"
      - name: Build failed
        if: failure() && steps.release.outcome != 'success'
        run: |
          jq '.build_failed = true' "${{ matrix.container }}" | sponge "${{ matrix.container }}"
      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          message: "ci: update container build state"
          committer_name: GitHub Actions
          committer_email: 41898282+github-actions[bot]@users.noreply.github.com
          add: '*.json'
