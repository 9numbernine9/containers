---
name: Fetch Test

on:
  workflow_dispatch:
  # schedule:
  #   - cron: "0 */4 * * *"
  push:
    paths:
      - '.github/scripts/fetch_test.sh'
      - '.github/scripts/versions/*.sh'
      - '.github/workflows/fetch_test.yaml'

env:
  TOKEN: ${{ secrets.TOKEN }}

jobs:
  fetch:
    name: Fetch Test
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.fetch.outputs.changes }}
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ env.TOKEN }}

      - name: Install tools
        run: |
          sudo apt-get install moreutils jo

      - name: Fetch new app versions
        id: fetch
        run: ./.github/scripts/fetch_test.sh

  filter:
    name: Filter Test
    runs-on: ubuntu-latest
    needs:
      - fetch
    outputs:
      app: ${{ steps.filter.outputs.app }}
      channels: ${{ steps.filter.outputs.channels }}
    strategy:
      matrix: ${{ fromJson(needs.fetch.outputs.matrix) }}
      fail-fast: false
    steps:
      - name: Test
        id: filter
        run: |-
          echo "::set-output name=app::${{ toJson(matrix.changes.app) }}"
          echo "::set-output name=channels::${{ toJson(matrix.changes.channels) }}"

  build:
    name: Build Test
    runs-on: ubuntu-latest
    needs:
      - fetch
      - filter
    strategy:
      matrix: 
        app: ${{ fromJson(needs.filter.outputs.app) }}
        channel: ${{ fromJson(needs.filter.outputs.channels) }}
      fail-fast: false
    steps:
      - name: Test
        id: envs
        run: |-
          echo "${{ matrix.app }}"
          echo "${{ matrix.channel }}"

      # - name: Repository Dispatch
      #   uses: peter-evans/repository-dispatch@v2
      #   with:
      #     token: ${{ secrets.TOKEN }}
      #     repository: onedr0p/containers
      #     event-type: changes
      #     client-payload: ${{ steps.fetch.outputs.changes }}

  # release:
  #   name: Release
  #   runs-on: ubuntu-latest
  #   needs:
  #     - fetch
  #   strategy:
  #     matrix: ${{ fromJson(needs.fetch.outputs.matrix) }}
  #     # matrix:
  #     #   app: [lidarr]
  #     #   channels: [master,develop,nightly]
  #     max-parallel: 5
  #     fail-fast: false
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Test
  #       run: |-
  #         echo "${{ matrix.changes }}"
